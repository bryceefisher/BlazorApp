@page "/hopadditions/details"
@inject BlazorApp.Models.MysqlhomebrewContext DB
@using BlazorApp.Models
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h4>Hopaddition</h4>
    <hr />
    @if (hopaddition is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Use</dt>
            <dd class="col-sm-10">@hopaddition.Use</dd>
            <dt class="col-sm-2">BoilTime</dt>
            <dd class="col-sm-10">@hopaddition.BoilTime</dd>
            <dt class="col-sm-2">DryHopDays</dt>
            <dd class="col-sm-10">@hopaddition.DryHopDays</dd>
            <dt class="col-sm-2">Form</dt>
            <dd class="col-sm-10">@hopaddition.Form</dd>
            <dt class="col-sm-2">Amount</dt>
            <dd class="col-sm-10">@hopaddition.Amount</dd>
            <dt class="col-sm-2">RecipeId</dt>
            <dd class="col-sm-10">@hopaddition.RecipeId</dd>
            <dt class="col-sm-2">HopId</dt>
            <dd class="col-sm-10">@hopaddition.HopId</dd>
        </dl>
        <div>
            <a href="@($"/hopadditions/edit?id={hopaddition.Id}")">Edit</a> |
            <a href="@($"/hopadditions")">Back to List</a>
        </div>
    }
</div>

@code {
    Hopaddition? hopaddition;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        hopaddition = await DB.Hopadditions.FirstOrDefaultAsync(m => m.Id == Id);

        if (hopaddition is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
